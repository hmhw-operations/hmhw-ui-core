.input {
  display: flex;
  flex-direction: column;
  gap: var(--size-100);
  font-size: var(--type-200);

  &.horizontal {
    flex-direction: row;
    gap: var(--space-400);

    label {
      min-width: 200px;
    }
  }

  .label {
    color: var(--component-input-label);
  }

  .description {
    color: var(--component-input-description);
    font-style: italic;
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    gap: var(--size-100);
  }

  .field {
    display: flex;
    height: var(--height-medium);
    color: var(--component-input-value);
    background-color: var(--component-input-background);
    border: 1px solid var(--component-input-border);
    border-radius: var(--radius-input);
    font-size: var(--type-300);

    input {
      background-color: transparent;
      color: var(--component-input-value);
      width: 100%;
      border: none;
      padding-inline: 0.5em;

      &:focus {
        outline: none;
        box-shadow: none;
      }
    }

    &:hover {
      border-color: var(--component-input-border-hover);
    }

    &:focus-within {
      outline: 2px solid var(--color-focus-ring);
      outline-offset: 0px;
      box-shadow: 0 0 0 4px var(--color-background-canvas);
      border-color: var(--component-input-border-hover);
    }

    &:has(input:active) {
      border-color: var(--component-input-border-active);
    }
  }
}

/* -----  Read-only styling  ------------------- */

.field:has(input:read-only) {
  border: none;
  border-radius: 0;
  border-bottom: 1px solid var(--component-input-border);

  &:focus-within {
    outline: none;
    box-shadow: none;
  }

  svg {
    width: 1.33em;
  }

  input {
    padding-inline: 0.25em;
  }
  .unit {
    border: none;
  }
}

/* -----  Unit styling  ------------------- */

.unit {
  display: flex;
  padding-inline: 1em;
  white-space: nowrap;
  align-items: center;
  justify-content: center;
  color: var(--component-input-unit);
  border-radius: 0 4px 4px 0;
  border-left: 1px solid var(--component-input-border);
}

/* -----  Disabled styling  ------------------- */

.input:has(input:disabled) {
  .field {
    color: var(--component-input-value-disabled);
    background-color: transparent;
    border: 1px solid var(--component-input-border-disabled);
  }

  .unit {
    color: var(--component-input-unit-disabled);
    background-color: transparent;
    border-color: var(--component-input-border-disabled);
  }

  .description {
    color: var(--component-input-description-disabled);
  }
}

/* -----  Error styling  ------------------- */

.error {
  .field {
    border-color: var(--component-input-border-error);
    background-color: var(--component-input-background-error);

    input {
      color: var(--component-input-value-error);
    }

    .unit {
      border-radius: 0 var(--component-input-radius) var(--component-input-radius) 0;
      border-color: var(--component-input-border-error);
    }
  }
  .errormessage {
    color: var(--component-input-description-error);
  }

  svg {
    color: var(--component-input-description-error);
    width: var(--size-300);
    height: auto;
    margin-right: var(--size-100);
  }
}

/* -----  Sizing styling  ------------------- */

.input {
  &.small {
    font-size: var(--type-200);

    .wrapper .field {
      height: var(--height-small);
      font-size: var(--type-200);
    }
  }

  &.large {
    font-size: var(--type-300);

    .field {
      height: var(--height-large);
      font-size: var(--type-400);
    }
  }

  &.x-large {
    font-size: var(--type-400);

    .field {
      height: var(--height-x-large);
      font-size: var(--type-500);
    }
  }
}
